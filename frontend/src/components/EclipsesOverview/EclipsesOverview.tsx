import React, { useEffect } from 'react';
import css from './EclipsesOverview.module.css';
import { themeActions } from '../../redux/slices/themeSlice';
import { useAppDispatch, useAppSelector } from '../../hooks/reduxHook';

interface Eclipse {
  date: string;
  type: string;
  visibility: string;
}

const eclipses: Eclipse[] = [
  { date: '2025-03-14', type: '–ß–∞—Å—Ç–∫–æ–≤–µ –°–æ–Ω—è—á–Ω–µ üåí', visibility: '–ü—ñ–≤–Ω—ñ—á–Ω–∞ –Ñ–≤—Ä–æ–ø–∞, –ê–∑—ñ—è' },
  { date: '2025-03-29', type: '–ü–æ–≤–Ω–µ –ú—ñ—Å—è—á–Ω–µ üåï', visibility: '–ê–∑—ñ—è, –ê–≤—Å—Ç—Ä–∞–ª—ñ—è, –ê–º–µ—Ä–∏–∫–∞' },
  { date: '2025-09-07', type: '–ü–æ–≤–Ω–µ –°–æ–Ω—è—á–Ω–µ üåû', visibility: '–ê—Ñ—Ä–∏–∫–∞, –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞' },
  { date: '2025-09-21', type: '–ß–∞—Å—Ç–∫–æ–≤–µ –ú—ñ—Å—è—á–Ω–µ üåì', visibility: '–Ñ–≤—Ä–æ–ø–∞, –ê–∑—ñ—è' },
  { date: '2026-02-17', type: '–ü–æ–≤–Ω–µ –ú—ñ—Å—è—á–Ω–µ üåï', visibility: '–ê–º–µ—Ä–∏–∫–∞, –ê—Ñ—Ä–∏–∫–∞, –Ñ–≤—Ä–æ–ø–∞' },
  { date: '2026-03-03', type: '–ü–æ–≤–Ω–µ –°–æ–Ω—è—á–Ω–µ üåû', visibility: '–ü—ñ–≤–¥–µ–Ω–Ω–∞ –ê–º–µ—Ä–∏–∫–∞, –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞' },
  { date: '2026-08-12', type: '–ß–∞—Å—Ç–∫–æ–≤–µ –ú—ñ—Å—è—á–Ω–µ üåì', visibility: '–Ñ–≤—Ä–æ–ø–∞, –ê–∑—ñ—è, –ê–≤—Å—Ç—Ä–∞–ª—ñ—è' },
  { date: '2026-08-26', type: '–ü–æ–≤–Ω–µ –°–æ–Ω—è—á–Ω–µ üåû', visibility: '–ì—Ä–µ–Ω–ª–∞–Ω–¥—ñ—è, –Ü—Å–ª–∞–Ω–¥—ñ—è, –Ñ–≤—Ä–æ–ø–∞' }
];

export const EclipsesOverview = () => {

const theme = useAppSelector(state => state.theme.theme);
  const dispatch = useAppDispatch();

  useEffect(() => {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'light' || savedTheme === 'dark') {
      dispatch(themeActions.setTheme(savedTheme === 'light'));
    } else {
      dispatch(themeActions.setTheme(true));
    }
  }, [dispatch]);


  return (
    <div className={theme ? css.containerBlockLight : css.containerBlockDark}>
      <h3 className={css.title}>–ó–∞—Ç–µ–º–Ω–µ–Ω–Ω—è 2025‚Äì2026</h3>
      <ul className={css.list}>
        {eclipses.map((eclipse, index) => (
          <li key={index} className={css.item}>
            <span className={css.date}>{eclipse.date}</span>
            <span className={css.type}>{eclipse.type}</span>
            <span className={css.visibility}>({eclipse.visibility})</span>
          </li>
        ))}
      </ul>
    </div>
  );
};